@model ACC_DEV.ViewModel.TxnPaymentViewMode
@{
    ViewData["Title"] = "Payment";

}
<!-- ============================================================== -->
<!-- Main wrapper - style you can find in pages.scss -->
<!-- ============================================================== -->
<div id="main-wrapper">
    <!-- ============================================================== -->
    <!-- Page wrapper  -->
    <!-- ============================================================== -->
    <div class="page-wrapper">
        <!-- ============================================================== -->
        <!-- Container fluid  -->
        <!-- ============================================================== -->
        <div class="container-fluid">
            <div class="card">
                <div class="card-header bg-info">
                    <h4 class="m-b-0 text-white">Additional Payment - Create</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h3>
                                Additional Payment
                            </h3>
                        </div>
                        <div class="col-md-6"></div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-9">

                        </div>
                    </div>
                    <br />
                    <br />
                    <form asp-action="Create" asp-controller="TxnPaymentHDs" id="PaymentHDForm">
                        <!-- Hidden field to store selected items -->
                        <input type="hidden" id="dtlItemsList" name="dtlItemsList" />
                        <div class="row">

                            <div class="col-md-2">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label for="ExchangeRate" id="paymentLabel">Payment No</label>
                                    </div>
                                    <div class="col-md-6">
                                        <input type="text" class="form-control" value="" />
                                        <span  class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-1"></div>
                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-4">
                                        <label for="Exchange Rate">Date</label>
                                    </div>
                                    <div class="col-md-8">
                                        <input type="date" asp-for="TxnPaymentHdMulti.FirstOrDefault().Date" class="form-control" value="Date" />
                                        <span asp-validation-for="TxnPaymentHdMulti.FirstOrDefault().Date" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-1"></div>
                            <div class="col-md-2">
                                <div class="row">
                                    <div class="col-md-5">
                                        <label for="Exchange Rate">Exchange Rate</label>
                                    </div>
                                    <div class="col-md-7">
                                        <input type="text" asp-for="TxnPaymentHdMulti.FirstOrDefault().ExchangeRate" class="form-control" />
                                        <span asp-validation-for="TxnPaymentHdMulti.FirstOrDefault().ExchangeRate" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>



                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-4">
                                        <input type="radio" id="Cheque" name="PaymentMethod" value="Cheque" checked />
                                        <label for="Cheque">Cheque</label>
                                    </div>
                                    <div class="col-md-4">
                                        <input type="radio" id="Cash" name="PaymentMethod" value="Cash" />
                                        <label for="Cash">Cash</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-7">
                                <div id="paymentDetails" style="border:1px solid black; padding: 10px;">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <label for="ExchangeRate" id="paymentLabel">Cheque No</label>
                                                </div>
                                                <div class="col-md-6">
                                                    <input type="text" asp-for="TxnPaymentHdMulti.FirstOrDefault().ChequeNo" class="form-control" value="" />
                                                    <span asp-validation-for="TxnPaymentHdMulti.FirstOrDefault().ChequeNo" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="row">
                                                <div class="col-md-2">
                                                    <label for="Customer">Debit A/C</label>
                                                </div>
                                                <div class="col-md-6">
                                                    <select id="selectedAccount" name="selectedAccount" class="form-control" asp-items="ViewBag.AccountsCodes"></select>
                                                    
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <br />
                                    <div class="row">
                                        <div class="col-md-2">
                                            <label for="Date "> Chq Date </label>
                                        </div>
                                        <div class="col-md-2">
                                            <input type="date" asp-for="TxnPaymentHdMulti.FirstOrDefault().ChequeDate" class="form-control" value="Date" />
                                            <span asp-validation-for="TxnPaymentHdMulti.FirstOrDefault().ChequeDate" class="text-danger"></span>
                                        </div>

                                        <div class="col-md-4">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <label for="ExchangeRate" id="paymentLabel">ACC PAYEE ONLY</label>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <input type="checkbox" asp-for="TxnPaymentHdMulti.FirstOrDefault().IsAcPayeeOnly" class="form-control" value="" />
                                                        <span asp-validation-for="TxnPaymentHdMulti.FirstOrDefault().IsAcPayeeOnly" class="text-danger"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br />
                        <br />

                        <div class="row">
                            <div class="col-md-3">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label for="ExchangeRate" id="paymentLabel">Credit A/C</label>
                                    </div>
                                    <div class="col-md-6">
@*                                         <input type="text" class="form-control" value="" />
                                        <span class="text-danger"></span> *@
                                        <select id="selectedAccount" name="selectedAccount" class="form-control" asp-items="ViewBag.AccountsCodes"></select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-9"></div>

                        </div>

                        <br />
                        <br />

                        <!--Table for Charge Items --><br />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table class="table table-hover border table-striped" id="tblContainer">
                                        <thead>
                                            <tr>
                                                <th>Acc No</th>
                                                <th>Description</th>
                                                <th>Amount</th>
                                            </tr>
                                        </thead>
                                        <tbody id="ContainerDetailsBody">
                                            <tr id="tablerow0" hidden>



                                                <td style="width:30%;">  <select id="selectedAccount" name="selectedAccount" class="form-control" asp-items="ViewBag.AccountsCodes"></select> </td>
                                                <td style="width:10%;"> <input type="text" id="Unit"  value="" name="Unit" class="form-control" ></input> </td>
                                                <td> <input type="text" id="Amount"  name="Amount" value="" class="form-control" readonly></td>
                                                <td> <input type="button" id="btnRemove" class="btn btn-danger" value="X" name="RemoveBttn" onclick="RemoveRow(this)" /></td>
                                            </tr>

                                                <tr class="tablerow">

                                                    <td>
                                                        <select   name="ChargeItemRw" class="form-control" asp-items="ViewBag.ChargeItemsList"></select>
                                                    </td>
                                                    <td>
                                                        <input type="text"  name="UnitRw"  class="form-control unit">
                                                    </td>
                                                    <td>
                                                        <input type="text"  name="Amount" value="" class="form-control amount" style="text-align: right;" readonly>
                                                    </td>
                                                    <td>
                                                        <input type="button" class="btn btn-danger" value="X" name="RemoveBttn" onclick="RemoveRow(this)" />
                                                    </td>
                                                </tr>
                                            
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!--Add button Charge Items-->
                            <div class="col-md-4">
                                <div class="form-group">

                                    <input id="add" type="button" value="+ Payment" onclick="AddRow(this)"
                                           class="btn btn-success" />
                                </div>
                            </div>
                            <div class="col-md-3"></div>
                            <!--Total LKR-->
                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label for="TotalAmount">Total Pay Amount </label>
                                    </div>
                                    <div class="col-md-6">
                                        <input type="text"  class="form-control" id="TotalAmtLKR" readonly />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-1"></div>
                        </div>

                        <br />
                        <br />

                        <!--Save Button-->
                        <div class="row">
                            <input type="hidden" id="dtlItemsList" name="dtlItemsList" />
                            <input type="hidden" id="customerType" name="customerType" value="@ViewBag.CustomerType" />
                            <input type="hidden" asp-for="TxnPaymentHdMulti.FirstOrDefault().ShippingLineID" value="@ViewBag.ShippingLineID"></input>

                            <!--Save Button-->
                            <div class="form-group">
                                <input type="submit" id="saveButton" value="Save" onclick="submitForm(this)" class="btn btn-primary" />
                            </div>
                        </div>
                    </form>
                </div>

            </div>
            <div>
                <a asp-action="Index">Back to List</a>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    // Enter key blocking from submitig
    //document.getElementById("PaymentHDForm").onkeypress = function (e) {

    //    preventEnterSubmit(e);
    //}

</script>
<script>
    function preventEnterSubmit(e) {
        // Enter Key
        if (e.which == 13) {
            var $targ = $(e.target);
            // alert(" Enter Key !" );
            if (!$targ.is("textarea") && !$targ.is(":button,:submit")) {
                //alert(" Not Textarea !");
                e.preventDefault();
            }

        }
    }
</script>
<script>
    // Function to update the caption based on the selected radio button
    function updateCaption() {
        if ($("input[name='PaymentMethod']:checked").val() === "Cheque") {
            // Change the label text to "Cheque No" when Cheque is selected
            $("#paymentLabel").text("Cheque No");
        } else if ($("input[name='PaymentMethod']:checked").val() === "BankTransfer") {
            // Change the label text to "Reference No" when Bank Transfer is selected
            $("#paymentLabel").text("Reference No");
        }
    }

    // Wait for the document to be ready
    $(document).ready(function () {
        // Initially, show the payment details div
        $("#paymentDetails").show();

        // Update the caption when the page loads
        updateCaption();

        // Listen for changes in the radio buttons
        $("input[name='PaymentMethod']").change(function () {
            if ($("input[name='PaymentMethod']:checked").val() === "Cash") {
                $("#paymentDetails").hide();
            } else {
                $("#paymentDetails").show();
                // Update the caption when a radio button is selected
                updateCaption();
            }
        });
    });
</script>
@*Function to move selected rows to the second table and Total amount calculations*@
<script>
    // Updated JavaScript

    // Function to move selected rows to the second table
    function moveSelectedRows() {
        var table1 = document.getElementById("tblContainer1");
        var table2 = document.getElementById("tblContainer2");
        var checkboxes = table1.querySelectorAll('input[type="checkbox"]:checked');

        checkboxes.forEach(function (checkbox) {
            var row = document.createElement("tr");
            var invoiceNo = checkbox.parentNode.parentNode.querySelector("td:nth-child(2)").textContent;
            var date = checkbox.parentNode.parentNode.querySelector("td:nth-child(3)").textContent;
            var amountPaid = checkbox.parentNode.parentNode.querySelector("td:nth-child(5)").textContent;
            var balanceAmt = checkbox.parentNode.parentNode.querySelector("td:nth-child(6)").textContent;
            var totalAmt = checkbox.parentNode.parentNode.querySelector("td:nth-child(4)").textContent;

            // Add cells to the row with desired values
            row.innerHTML = '<td><input type="checkbox" name="selectedInvoices" value="' + invoiceNo + '" /></td>' +
                '<td>' + invoiceNo + '</td>' +
                '<td  nowrap="">' + date + '</td>' +
                '<td>' + totalAmt + '</td>' +
                '<td>' + amountPaid + '</td>' +
                '<td>' + balanceAmt + '</td>' +
                '<td><input type="text" name="invoiceAmounts[]" value="' + balanceAmt + '" class="form-control" /></td>';

            // Append the row to the second table body
            table2.querySelector("tbody").appendChild(row);

            // Remove the selected row from table1
            checkbox.parentNode.parentNode.remove();

            // Recalculate total receipt amount after moving selected rows
            updateTotalReceiptAmount();
        });
    }

    // Function to move selected rows back to the first table
    function moveRemoveRows() {
        var table1 = document.getElementById("tblContainer1");
        var table2 = document.getElementById("tblContainer2");
        var checkboxes = table2.querySelectorAll('input[type="checkbox"]:checked');

        checkboxes.forEach(function (checkbox) {
            var row = document.createElement("tr");
            var invoiceNo = checkbox.parentNode.parentNode.querySelector("td:nth-child(2)").textContent;
            var date = checkbox.parentNode.parentNode.querySelector("td:nth-child(3)").textContent;
            var totalAmt = checkbox.parentNode.parentNode.querySelector("td:nth-child(4)").textContent;
            var amountPaid = checkbox.parentNode.parentNode.querySelector("td:nth-child(5)").textContent;
            var balanceAmt = checkbox.parentNode.parentNode.querySelector("td:nth-child(6)").textContent;
            var Amount = checkbox.parentNode.parentNode.querySelector("td:nth-child(7) input").value; // Retrieve input value

            // Add cells to the row with desired values
            row.innerHTML = '<td><input type="checkbox" name="selectedInvoices" value="' + invoiceNo + '" /></td>' +
                '<td>' + invoiceNo + '</td>' +
                '<td>' + date + '</td>' +
                '<td>' + totalAmt + '</td>' +
                '<td>' + amountPaid + '</td>' +
                '<td>' + balanceAmt + '</td>'; // Append balanceAmt directly

            // Append the row to the first table body
            table1.querySelector("tbody").appendChild(row);

            // Remove the selected row from table2
            checkbox.parentNode.parentNode.remove();

            // Recalculate total receipt amount after moving selected rows
            updateTotalReceiptAmount();
        });
    }

    // Function to update total receipt amount
    function updateTotalReceiptAmount() {
        var totalReceiptAmount = 0;

        // Calculate total receipt amount based on selected rows from the second table
        $('#tblContainer2 tbody tr').each(function () {
            var invoiceAmount = parseFloat($(this).find('td:nth-child(7) input').val());
            totalReceiptAmount += isNaN(invoiceAmount) ? 0 : invoiceAmount;
        });

        // Add the value of "Other Amount" field to the total receipt amount
        var otherAmount = parseFloat($('#otherAmountInput').val());
        totalReceiptAmount += isNaN(otherAmount) ? 0 : otherAmount;

        // Update the total receipt amount field
        $('#totalReceiptAmount').val(totalReceiptAmount.toFixed(2));
        $('#receiptTotalAmt').val(totalReceiptAmount.toFixed(2));
    }

    // Listen for input events on the "Other Amount" field
    $('#otherAmountInput').on('input', function () {
        updateTotalReceiptAmount();
    });

    // Listen for input events on invoice amount input fields in the second table
    $('#tblContainer2 tbody').on('input', 'input[name="invoiceAmounts[]"]', function () {
        updateTotalReceiptAmount();
    });

    // Call the updateTotalReceiptAmount function initially to set the initial total receipt amount
    updateTotalReceiptAmount();

</script>
@*// Create and submit Payment Voucher Detail Json*@
<script>
    // Create and submit Charge Items
    function submitForm(e) {

        //e.preventDefault(); // Prevent default form submission
        //alert("Test Submit");

        const dtlItems = []; // Array to hold details of selected items

        //// Iterate over rows in tblContainer2
        $('#tblContainer2 tbody tr').each(function (index, row) {
            //alert("Amount 1");
            var serialNo = index + 1; // Serial number starts from 1
            var refNo = $(row).find('td:nth-child(2)').text(); // Get description from second column
            var amountInput = $(row).find('td:nth-child(7) input'); // Get input field in fourth column
            var amount = 0; // Default amount
            var refType = "PayVouAdd";
            //alert("Amount 2");

            // Check if the amount input field exists and has a value
            if (amountInput.length > 0 && amountInput.val() !== "") {
                amount = parseFloat(amountInput.val()); // Get amount if it's not null or empty
            }
            //alert("Amount 3: " + amount);
            // Check if the amount is not zero
            if (amount !== 0) {
                // Add item details to dtlItems array
                dtlItems.push({
                    SerialNo: serialNo,
                    RefNo: refNo,
                    RefType: refType,
                    Amount: amount
                });
            };
            //alert("Amount 4");
        });
        $("#dtlItemsList").val(JSON.stringify(dtlItems));
    }

</script>

<script>
    $(document).ready(function () {
        //alert("Test Tyepe");
        // Initially hide the local and overseas dropdowns
        $("#localDropdown").hide();
        $("#SupplierDropdown").hide();
        $("#overseasDropdown").show(); // Assuming overseas dropdown is initially visible

        // Listen for changes in the radio buttons
        $("input[name='customerType']").change(function () {
            if ($("#customerType:checked").val() === "Local") {
                // If "Local" is selected, show the local dropdown and hide the overseas dropdown
                $("#localDropdown").show();
                $("#overseasDropdown").hide();
                $("#SupplierDropdown").hide();
            } else if ($("#customerType:checked").val() === "Overseas") {
                // If "Overseas" is selected, show the overseas dropdown and hide the local dropdown
                $("#localDropdown").hide();
                $("#overseasDropdown").show();
                $("#SupplierDropdown").hide();
            } else if ($("#customerType:checked").val() === "Supplier") {
                // If "Overseas" is selected, show the overseas dropdown and hide the local dropdown
                $("#localDropdown").hide();
                $("#overseasDropdown").hide();
                $("#SupplierDropdown").show();
            }
        });
    });
</script>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    // Create and submit Charge Items

    function submitForm(e) {

        const dtlItemsArray = [];
        const tableRows = $("#tblContainer tbody tr");
        var chkAmount = "";

        tableRows.each(function (index) {
            const trRow = $(this);
            chkAmount = trRow.find('input[name="Amount"]').val();

            if (chkAmount === "" || parseFloat(chkAmount) === 0) {
                // chkAmount is empty or zero
                //console.log("chkAmount is empty or zero");
            } else {
                // chkAmount is not empty and not zero
                const dtlItemJson = buildItemsJson(trRow, index);
                dtlItemsArray.push(dtlItemJson);
            }
        });

        $("#dtlItemsList").val(JSON.stringify(dtlItemsArray));
        var jobNo = JobHdMulti.FirstOrDefault().JobNo;
        alert("jobNo: " + jobNo);

        // Assign the value to the hidden input field using jQuery
        $('#invoiceJobNo').val(jobNo);
    }

    // Json Var create
    function buildItemsJson(trRow, id) {
        return {
            SerialNo: id,
            Description: trRow.find('input[name="Description"]').val(),
            Amount: trRow.find('input[name="Amount"]').val(),
        };
    }


</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Enter key blocking from submitig
        document.getElementById("InvoiceHDForm").onkeypress = function (e) {

            preventEnterSubmit(e);
        }

    </script>
    <script>
        function preventEnterSubmit(e) {
            // Enter Key
            if (e.which == 13) {
                var $targ = $(e.target);
                // alert(" Enter Key !" );
                if (!$targ.is("textarea") && !$targ.is(":button,:submit")) {
                    //alert(" Not Textarea !");
                    e.preventDefault();
                }

            }
        }
    </script>
    <script type="text/javascript">
        function AddRow(e) {
            // alert(" record(s) inserted.");
            //clones the first row of the table
            var newRow = $("#tblContainer tbody tr").first().clone();
            //removes the 'hidden' attribute so it will be visible when added  to the table
            newRow.removeAttr("hidden");

            // Get No of rows
            var NoOfRows = $("#tblContainer tbody tr").length
            var counter = NoOfRows + 1;


            // Update remove Button
            var removeBtn = newRow.find('input[name="RemoveBttn"]');
            var RemoveBtnVal = 'RemoveRow(' + counter + ')';
            $(removeBtn).attr('onclick', RemoveBtnVal);

            //Update Row id (for remove)
            var RowID = "tablerow" + counter;
            newRow.attr("id", RowID);
            //add/append new row to the table

            $("tbody").append(newRow);

            return false;

        }

        function RemoveRow(index) {
            // alert(" record remove: " + index);
            $('#tablerow' + index).remove();
            calculateTotalAmount();
            return false;
        }
    </script>
    <script>
        // Create and submit Charge Items

        function submitForm(e) {

            const dtlItemsArray = [];
            const tableRows = $("#tblContainer tbody tr");
            var chkAmount = "";

            tableRows.each(function (index) {
                //alert("Test in tbl ROW");
                const trRow = $(this);
                chkAmount = trRow.find('input[name="Amount"]').val();
                // Check if chkAmount is empty or zero
                if (chkAmount === "" || parseFloat(chkAmount) === 0) {
                    // chkAmount is empty or zero
                    //console.log("chkAmount is empty or zero");
                } else {
                    // chkAmount is not empty and not zero
                    const dtlItemJson = buildItemsJson(trRow, index);
                    dtlItemsArray.push(dtlItemJson);
                }
            });
            $("#dtlItemsList").val(JSON.stringify(dtlItemsArray));
        }
        // Json Var create
        function buildItemsJson(trRow, id) {
            return {
                SerialNo: id,
                ChargeItem: trRow.find('select[name="ChargeItemRw"]').val(),
                Unit: trRow.find('select[name="Unit"]').val(),
                Rate: trRow.find('input[name="Rate"]').val(),
                Currency: trRow.find('select[name="Currency"]').val(),
                Qty: trRow.find('input[name="Qty"]').val(),
                Amount: trRow.find('input[name="Amount"]').val(),
            };
        }
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Add event listener to the parent table
            var containerTable = document.querySelector("#ContainerDetailsBody");
            containerTable.addEventListener("input", function (event) {
                var target = event.target;

                // Check if the input is in a row and has the relevant IDs
                if (target.closest("tr") && (target.id === "Rate" || target.id === "Qty" || target.id === "Currency")) {
                    calculateAmount(target);
                }
            });

            containerTable.addEventListener("change", function (event) {
                var target = event.target;

                // Check if the change event is for the Currency dropdown
                if (target.closest("tr") && target.id === "Currency") {
                    calculateTotalAmount();
                }
            });

            // Add event listeners to all remove buttons
            var removeButtons = document.querySelectorAll("#ContainerDetailsBody #btnRemove");
            removeButtons.forEach(function (button) {
                button.addEventListener("click", function () {
                    // Remove the row and recalculate total amount
                    var row = this.parentNode.parentNode;
                    row.parentNode.removeChild(row);
                    calculateTotalAmount();
                });
            });
        });

        function calculateAmount(element) {
            // Calculate amount for the current row
            var row = element.closest("tr");
            var rate = parseFloat(row.querySelector("#Rate").value);
            var qty = parseFloat(row.querySelector("#Qty").value);
            var amount = rate * qty;

            if (!isNaN(amount)) {
                row.querySelector("#Amount").value = amount.toFixed(2);
            }

            // Calculate total amount for all rows
            calculateTotalAmount();
        }

        function calculateTotalAmount() {
            // Calculate total amount for all rows
            var totalAmount = 0;
            var totalUSD = 0;
            var totalLKR = 0;
            var exchangeRate = parseFloat(document.querySelector("#ExchangeRate").value);

            var rows = document.querySelectorAll("#ContainerDetailsBody tr");

            rows.forEach(function (row) {
                var amount = parseFloat(row.querySelector("#Amount").value);
                var currency = row.querySelector("#Currency").value;

                if (!isNaN(amount)) {
                    totalAmount += amount;

                    if (currency === "USD") {
                        totalUSD += amount;
                        totalLKR += amount * exchangeRate;
                    } else if (currency === "LKR") {
                        totalLKR += amount;
                        totalUSD += amount / exchangeRate;
                    }
                }
            });

            // Set the total amount in the TotalAmt input field
            document.querySelector("#TotalAmtLKR").value = totalLKR.toFixed(2);
            document.querySelector("#TotalAmtUSD").value = totalUSD.toFixed(2);
        }
    </script>





}
